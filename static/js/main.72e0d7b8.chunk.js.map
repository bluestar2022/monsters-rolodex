{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.components.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","m","id","name","email","CardList","allmonsters","map","a_monster","SearchBox","place_holder","handleChange","type","placeholder","onChange","App","handle_the_Change","e","setState","searchField","target","value","state","monsters","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,EAAEC,GAAlC,4BACtB,mCAAML,EAAMI,EAAEE,KAAd,OACA,kCAAKN,EAAMI,EAAEG,aCHRC,G,MAAW,SAACR,GAErB,OAAQ,qBAAKC,UAAU,YAAf,SAIFD,EAAMS,YAAYC,KAAI,SAAAC,GAAS,OAAI,cAAC,EAAD,CAAyBP,EAAGO,GAAjBA,EAAUN,WCPrDO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,aAAhB,OACjB,uBAAOb,UAAU,SAASc,KAAK,SAASC,YAAaH,EAAcI,SAAUH,MCoDtEI,G,wDAlDb,aAAe,IAAD,8BAEZ,gBA8BFC,kBAAoB,SAAAC,GAClB,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SA9BrC,EAAKC,MAAQ,CAEXC,SAAU,GACVJ,YAAa,IANH,E,qDAYhB,WAAqB,IAAD,OAClBK,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACK,SAAUK,S,oBAqBxC,WAAU,IAAD,EACyBC,KAAKP,MAA9BC,EADA,EACAA,SAAUJ,EADV,EACUA,YACXW,EAAmBP,EAASQ,QAAQ,SAAA9B,GAAC,OAAIA,EAAEE,KAAK6B,cAAcC,SAASd,EAAYa,kBAEzF,OACE,sBAAKlC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWY,aAAe,kBAAkBC,aAAgBkB,KAAKb,oBACjE,cAAC,EAAD,CAAUV,YAAewB,W,GA7CfI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.72e0d7b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${props.m.id}?set=set2&size=180x180`} />\r\n        <h2> {props.m.name} </h2>\r\n        <p> {props.m.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = (props) => {\r\n    //console.log(props);\r\n    return (<div className='card-list'>\r\n        {//props.children\r\n        }\r\n        {\r\n          props.allmonsters.map(a_monster => <Card key={a_monster.id} m={a_monster}/>)\r\n        }\r\n        </div>);\r\n}","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({place_holder, handleChange}) => (\r\n        <input className='search' type='search' placeholder={place_holder} onChange={handleChange} />\r\n);","import React, {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.components'\nimport {SearchBox} from './components/search-box/search-box.component'\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n\n    super()\n    this.state = {\n      //string: 'Hello Hisham',\n      monsters: [],\n      searchField: ''\n    };\n\n    //this.handle_the_Change = this.handle_the_Change.bind(this);\n  }\n\ncomponentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(users => this.setState({monsters: users}))\n}\n\n  // render () {\n  //   return (\n  //     <div className=\"App\">\n  //       <header className=\"App-header\">\n  //         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //         <p>\n  //           {this.state.string}\n  //         </p>\n  //         <button onClick={() => this.setState({string: 'Hello Safaa'})}>Change Text</button>\n  //       </header>\n  //     </div>\n  //   );\n  // }\n\n  handle_the_Change = e => {\n    this.setState({searchField: e.target.value});\n  }\n\n  render() {\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter( m => m.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox place_holder = 'Search Monsters' handleChange = {this.handle_the_Change} />\n        <CardList allmonsters = {filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}